# src/whatsapp_alert.py
import os
from dotenv import load_dotenv
from twilio.rest import Client

load_dotenv()

def _clean(v): 
    return (v or "").strip()

# Read environment variables safely
ACCOUNT_SID  = _clean(os.getenv("TWILIO_ACCOUNT_SID"))
AUTH_TOKEN   = _clean(os.getenv("TWILIO_AUTH_TOKEN"))
API_KEY      = _clean(os.getenv("TWILIO_API_KEY"))
API_SECRET   = _clean(os.getenv("TWILIO_API_SECRET"))
FROM_WHATSAPP = _clean(os.getenv("WHATSAPP_FROM", "whatsapp:+14155238886"))
TO_WHATSAPP   = _clean(os.getenv("WHATSAPP_TO"))

def get_client():
    try:
        if API_KEY and API_SECRET:
            return Client(API_KEY, API_SECRET, ACCOUNT_SID)
        else:
            return Client(ACCOUNT_SID, AUTH_TOKEN)
    except Exception as e:
        print(f"❌ Twilio client init failed: {e}")
        return None

def send_whatsapp_alert(message: str):
    client = get_client()
    if not client:
        print("⚠️  WhatsApp client unavailable.")
        return

    # 🎨 Format beautification
    formatted = (
        "📢 *MARKET ALERT UPDATE*\n"
        "━━━━━━━━━━━━━━━\n"
        f"{message}\n"
        "━━━━━━━━━━━━━━━\n"
        "💬 _This alert is auto-generated by Market Bot_\n"
        "⏰ Stay alert • Trade smart"
    )

    try:
        msg = client.messages.create(
            from_=FROM_WHATSAPP,
            body=formatted,
            to=TO_WHATSAPP
        )
        print(f"✅ WhatsApp Message Sent: {msg.sid}")
    except Exception as e:
        print(f"❌ Error sending WhatsApp message: {e}")
